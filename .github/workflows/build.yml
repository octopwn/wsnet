name: Build Executables

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['3.11']

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install .

    - name: Compile to executable
      run: |
        pyinstaller --onefile wsnet/server/wsserver.py
      shell: bash

    - name: Archive the executable
      uses: actions/upload-artifact@v4
      with:
        name: wsnet_windows
        path: dist/wsserver.exe

  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11']

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install .

    - name: Compile to executable
      run: |
        pyinstaller --onefile wsnet/server/wsserver.py
      shell: bash

    - name: Archive the executable
      uses: actions/upload-artifact@v3
      with:
        name: wsnet_linux
        path: dist/wsserver

  build-macos:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        python-version: ['3.11']
        architecture: [x86_64, arm64]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install .

    - name: Compile to executable
      run: |
        pyinstaller --onefile wsnet/server/wsserver.py
      shell: bash

    - name: Archive the executable (macOS Intel)
      if: matrix.architecture == 'x86_64'
      uses: actions/upload-artifact@v3
      with:
        name: wsnet_macos_intel
        path: dist/wsserver

    - name: Archive the executable (macOS Apple Silicon)
      if: matrix.architecture == 'arm64'
      uses: actions/upload-artifact@v3
      with:
        name: wsnet_macos_arm64
        path: dist/wsserver
